# Configuration for Travis CI
language: rust
sudo: required
services:
  - docker
addons:
  apt:
    packages:
      - libssl-dev

      # Cross compiler dependencies for ARM
      # - gcc-arm-linux-gnueabihf
      # - libc6-armhf-cross
      # - libc6-dev-armhf-cross

stages:
  - build
  - test
  - name: release
    if: tag =~ ^v(\d+\.)*\d+$

jobs:
  include:
    ################################
    # Build stage                  #
    ################################

    # Linux with Rust stable/beta/nightly
    - stage: build
      rust: stable
      script: &build-script
        - cargo build --verbose --all
        - cargo build --no-default-features --verbose --all
        - cargo build --features no-color --verbose --all
      cache: cargo
    - stage: build
      rust: beta
      script: *build-script
    - stage: build
      rust: nightly
      script: *build-script

    # macOS with Rust stable
    - stage: build
      rust: stable
      os: osx
      script: *build-script

    ################################
    # Test stage                   #
    ################################

    - stage: test
      script: cargo test --verbose --all
      cache: cargo

    ################################
    # Release stage                #
    ################################

    # Cargo crate release
    - stage: release
      script:
        - echo $CARGO_TOKEN | cargo login
        - cargo publish --verbose
      cache: cargo

    # GitHub binary release for Linux on x86/x86_64
    - stage: release
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
      script:
        - cargo build --release --verbose --all
        - cd target/release
        - tar -czvf $TRAVIS_BUILD_DIR/ffsend-$TARGET.tar.gz ffsend
        - cd $TRAVIS_BUILD_DIR
      deploy: &deploy-github-release-cross
        provider: releases
        api_key: $GITHUB_OAUTH_TOKEN
        skip_cleanup: true
        overwrite: false
        file: ffsend-$TARGET.tar.gz
        on:
          tags: true
          branch: master
    - stage: release
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
      install: &install-github-release-cross
        - cargo install cross
      script: &script-github-release-cross
        - cross build --target $TARGET --release --verbose --all
        - cd target/release
        - tar -czvf $TRAVIS_BUILD_DIR/ffsend-$TARGET.tar.gz ffsend
        - cd $TRAVIS_BUILD_DIR
      deploy: *deploy-github-release-cross

    # GitHub binary release for Linux on arch
    - stage: release
      rust: stable
      env: TARGET=aarch64-unknown-linux-gnu
      install: *install-github-release-cross
      script: *script-github-release-cross
      deploy: *deploy-github-release-cross
    - stage: release
      rust: stable
      install: *install-github-release-cross
      script: *script-github-release-cross
      deploy: *deploy-github-release-cross
    - stage: release
      rust: stable
      env: TARGET=armv7-unknown-linux-gnueabihf
      install: *install-github-release-cross
      script: *script-github-release-cross
      deploy: *deploy-github-release-cross

    # GitHub binary release for macOX
    - stage: release
      rust: stable
      os: osx
      env: TARGET=x86_64-apple-darwin
      script:
        - cargo build --release --verbose --all
        - cd target/release
        - tar -czvf $TRAVIS_BUILD_DIR/ffsend-$TARGET.tar.gz ffsend
        - cd $TRAVIS_BUILD_DIR
      deploy: *deploy-github-release-cross

# TODO: add (Free)BSD architecture
# TODO: use regular cargo commands for x86_64 linux
# TODO: release a build for each architecture
# TODO: enfore the git tag/crate version equality for releases
# TODO: disable addons/rust installation for GitHub release job
